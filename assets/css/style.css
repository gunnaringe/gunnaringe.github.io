#impress {
    z-index: -1;
    float: left;
}

.step {
    position: relative;
    width: 900px;
    padding: 40px;
    margin: 20px auto;
    box-sizing:         border-box;

    font-family: 'PT Serif', georgia, serif;
    font-size: 48px;
    line-height: 1.5;
}

.impress-enabled .step {
    margin: 0;
    opacity: 0.3;
    transition:         opacity 1s;
}

.impress-enabled .step.active { opacity: 1 }

/*
    All impress.js steps are wrapped inside a div element of 0 size! This means that relative
    values for width and height (example: `width: 100%`) will not work. You need to use pixel
    values. The pixel values used here correspond to the data-width and data-height given to the
    #impress root element. When the presentation is viewed on a larger or smaller screen, impress.js
    will automatically scale the steps to fit the screen.
*/
.slide {
    display: block;

    width: 900px;
    height: 700px;
    padding: 40px 60px;

    background-color: white;
    border: 1px solid rgba(0, 0, 0, .3);
    border-radius: 10px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, .1);

    color: rgb(102, 102, 102);
    text-shadow: 0 2px 2px rgba(0, 0, 0, .1);

    font-family: 'Open Sans', Arial, sans-serif;
    font-size: 30px;
    line-height: 36px;
    letter-spacing: -1px;
}

.slide q {
    display: block;
    font-size: 50px;
    line-height: 72px;

    margin-top: 100px;
}

.slide q strong {
    white-space: nowrap;
}

/*
    And now we start to style each step separately.

    I agree that this may be not the most efficient, object-oriented and
    scalable way of styling, but most of steps have quite a custom look
    and typography tricks here and there, so they had to be styled separately.

    First is the title step with a big <h1> (no room for padding) and some
    3D positioning along Z axis.
*/

#title {
    padding: 0;
}

#title .try {
    font-size: 64px;
    position: absolute;
    top: -0.5em;
    left: 1.5em;

    -webkit-transform: translateZ(20px);
    -moz-transform:    translateZ(20px);
    -ms-transform:     translateZ(20px);
    -o-transform:      translateZ(20px);
    transform:         translateZ(20px);
}

#title h1 {
    font-size: 180px;

    -webkit-transform: translateZ(50px);
    -moz-transform:    translateZ(50px);
    -ms-transform:     translateZ(50px);
    -o-transform:      translateZ(50px);
    transform:         translateZ(50px);
}

#title .footnote {
    font-size: 32px;
}

/*
    Second step is nothing special, just a text with a link, so it doesn't need
    any special styling.

    Let's move to 'big thoughts' with centered text and custom font sizes.
*/
#big {
    width: 600px;
    text-align: center;
    font-size: 60px;
    line-height: 1;
}

#big strong,
#big b {
    display: block;
    font-size: 250px;
    line-height: 250px;
}

#big .thoughts {
    font-size: 90px;
    line-height: 150px;
}

/*
    'Tiny ideas' just need some tiny styling.
*/
#tiny {
    width: 500px;
    text-align: center;
}

/*
    This step has some animated text ...
*/
#ing { width: 500px }

/*
    ... so we define display to `inline-block` to enable transforms and
    transition duration to 0.5s ...
*/
#ing b {
    display: inline-block;
    transition:         0.5s;
}

/*
    ... and we want 'positioning` word to move up a bit when the step gets
    `present` class ...
*/
#ing.present .positioning {
    transform:         translateY(-10px);
}

/*
    ... 'rotating' to rotate a quarter of a second later ...
*/
#ing.present .rotating {
    transform:         rotate(-10deg);
    transition-delay:         0.25s;
}

/*
    ... and 'scaling' to scale down after another quarter of a second.
*/
#ing.present .scaling {
    transform:         scale(0.7);
    transition-delay:         0.5s;
}

/*
    The 'imagination' step is again some boring font-sizing.
*/

#imagination {
    width: 600px;
}

#imagination .imagination {
    font-size: 78px;
}

/*
    We also make other steps visible and give them a pointer cursor using the
    `impress-on-` class.
*/
.impress-on-overview .step {
    opacity: 1;
}
